import streamlit as st
import matplotlib.pyplot as plt
import pandas as pd
import plotly.express as px
from regions import regions_ru


translation = {'–£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è':['urbanization', '—É—Ä–±–∞–Ω–∏–∑–∞—Ü–∏–∏', "% –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è"],
           '–†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å':['birth_rate', '—Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏', '–†–æ–∂–¥–µ–Ω–∏–π –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫'],
           '–°–º–µ—Ä—Ç–Ω–æ—Å—Ç—å':['death_rate', '—Å–º–µ—Ä—Ç–Ω–æ—Å—Ç–∏', '–°–º–µ—Ä—Ç–µ–π –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫'],
               '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è':['npg', '–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏—Ä–æ—Å—Ç–∞', '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫']}

# streamlit run demo_app.py
with st.echo(code_location='below'):
    st.title("–î–µ–º–æ–≥—Ä–∞—Ñ–∏—è")
    """
    –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å 1990 –¥–æ 2017 –≥–æ–¥–∞ –≤ –†–æ—Å—Å–∏–∏.
    –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ [—Ç—É—Ç](https://www.kaggle.com/dwdkills/russian-demography). –î–∞–≤–∞–π—Ç–µ –Ω–∞ –Ω–∏—Ö –ø–æ—Å–º–æ—Ç—Ä–∏–º:
    """
    df = pd.read_csv('russian_demography.csv')
    df
    """ 
    ### **–ö–∞–∫ –∏–∑–º–µ–Ω—è–ª—Å—è —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –ª—é–±–æ–π –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–æ –†–æ—Å—Å–∏–∏ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥?**
    """
    desired_x = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É:',
                             ['–£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è', '–†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å', '–°–º–µ—Ä—Ç–Ω–æ—Å—Ç—å', '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è'])
    """
    """
    fig = plt.figure(figsize = (10, 6))
    fig.set_facecolor('linen')
    plt.ylabel(translation[desired_x][2])
    plt.plot(df.groupby('year')[translation[desired_x][0]].mean())
    plt.title(f"–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å {translation[desired_x][1]} –≤ –†–æ—Å—Å–∏–∏")
    st.pyplot(fig)
    """ 
    ### **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤**
    """
    desired_3 = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —Å—Ä–∞–≤–Ω–∏—Ç—å:', list(regions_ru.keys()), default=[list(regions_ru.keys())[33],
                               list(regions_ru.keys())[84], list(regions_ru.keys())[54]])
    if len(desired_3) >= 1:
        reg = []
        for i in desired_3:
            reg.append(regions_ru[i])
        def fun1(r, x):
            df_reg = df[(df['region'] == r) & (df['year'] >= 2012)]
            return round(df_reg[x].mean(), 2)
        """
        –í —Ç–∞–±–ª–∏—Ü–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞ 2012-2017.
        """
        a = f"""
        |–†–µ–≥–∏–æ–Ω| –£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è        |  –°–º–µ—Ä—Ç–Ω–æ—Å—Ç—å          | –†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å  | –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç |
        | ------------- | :-------------: |:-------------:| :-----:|:-----:|
        | {desired_3[0]} | {fun1(reg[0], 'urbanization')}%    | {fun1(reg[0], 'death_rate')} | {fun1(reg[0], 'birth_rate')} | {fun1(reg[0], 'npg')} |
        """
        for i in range(1, len(desired_3)):
            a = a + f"""| {desired_3[i]} | {fun1(reg[i], 'urbanization')}%    | {fun1(reg[i], 'death_rate')} | {fun1(reg[i], 'birth_rate')} | {fun1(reg[i], 'npg')}|
            """
        a
        """
        """
        desired_x2 = st.selectbox('–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞:',
                                 ['–£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è', '–†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å', '–°–º–µ—Ä—Ç–Ω–æ—Å—Ç—å', '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç –Ω–∞—Å–µ–ª–µ–Ω–∏—è'], index=2)

        df1 = df.loc[df['region'].isin(reg)]

        fig = px.line(df1, x="year", y=translation[desired_x2][0], color='region')
        st.plotly_chart(fig)
    else:
        """
        **–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–≥–∏–æ–Ω**
        """
    balloons = st.button('üëç')
    if balloons:
        st.balloons()